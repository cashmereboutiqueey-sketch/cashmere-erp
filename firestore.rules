rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions to check user roles
    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    function isAdmin() {
      return getUserRole() == 'admin';
    }

    function isProduction() {
      return getUserRole() == 'production';
    }
    
    function isSales() {
        return getUserRole() == 'sales';
    }
    
    function isAccountant() {
        return getUserRole() == 'accountant';
    }
    
    function isWarehouseManager() {
        return getUserRole() == 'warehouse_manager';
    }

    // Admins have universal access
    // This is carefully placed so it doesn't block more specific rules.
    // However, for better security, we define rules per collection.

    // Users: Admins can manage users. All authenticated users can read their own data.
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      allow write: if isAdmin();
    }

    // Suppliers: Admins and Production can read and write.
    match /suppliers/{supplierId} {
      allow read: if isAdmin() || isProduction();
      allow create, update, delete: if isAdmin() || isProduction();
    }
    
    // Fabrics: Admins and Production can read and write.
    match /fabrics/{fabricId} {
        allow read: if isAdmin() || isProduction();
        allow create, update, delete: if isAdmin() || isProduction();
    }
    
    // Products & Product-Fabric relations: Admins, Production, and Warehouse Managers can manage.
    match /products/{productId} {
        allow read: if isAdmin() || isProduction() || isWarehouseManager() || isSales();
        allow create, update, delete: if isAdmin() || isProduction() || isWarehouseManager();
    }

    match /product_fabrics/{productFabricId} {
        allow read: if isAdmin() || isProduction() || isWarehouseManager();
        allow create, update, delete: if isAdmin() || isProduction() || isWarehouseManager();
    }

    // Customers: Admins and Sales can manage.
    match /customers/{customerId} {
        allow read, write: if isAdmin() || isSales();
    }

    // Orders: Admins and Sales can manage.
    match /orders/{orderId} {
        allow read, write: if isAdmin() || isSales();
    }
    
    // Production Orders: Admins and Production can manage.
    match /production_orders/{productionOrderId} {
        allow read, write: if isAdmin() || isProduction();
    }

    // Workers & WorkLogs: Admins and Production can manage.
    match /workers/{workerId} {
      allow read, write: if isAdmin() || isProduction();
    }
    match /work_logs/{workLogId} {
        allow read, write: if isAdmin() || isProduction();
    }

    // Financial data: Admins and Accountants can manage.
    match /expenses/{expenseId} {
        allow read, write: if isAdmin() || isAccountant();
    }
    
    // Notifications can be read by any authenticated user, but only created by the system (server-side logic not defined here)
    // and updated (to read=true) by authenticated users.
    match /notifications/{notificationId} {
        allow read, update: if request.auth != null;
        allow create: if true; // Assuming server-side creation
    }
  }
}
