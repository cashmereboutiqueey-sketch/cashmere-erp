
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuth() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isAuth() && request.auth.uid == userId;
    }

    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    function isAdmin() {
      return isAuth() && getUserRole() == 'admin';
    }

    function isRole(role) {
        return isAuth() && getUserRole() == role;
    }
    
    function isOneOfRoles(roles) {
        return isAuth() && getUserRole() in roles;
    }

    // Rules for collections
    match /users/{userId} {
      allow read: if isAuth();
      allow create, update, delete: if isAdmin();
    }
    
    match /customers/{customerId} {
      allow read, write: if isOneOfRoles(['admin', 'sales']);
    }

    match /products/{productId} {
        allow read: if isAuth();
        allow create, update, delete: if isOneOfRoles(['admin', 'production']);
    }

    match /product_fabrics/{productFabricId} {
        allow read, write: if isOneOfRoles(['admin', 'production']);
    }
    
    match /fabrics/{fabricId} {
       allow read, write: if isOneOfRoles(['admin', 'production']);
    }

    match /suppliers/{supplierId} {
      allow read: if isOneOfRoles(['admin', 'production']);
      allow create, update, delete: if isOneOfRoles(['admin', 'production']);
    }

    match /orders/{orderId} {
        allow read: if isAuth();
        allow create, update: if isOneOfRoles(['admin', 'sales']);
        allow delete: if isAdmin();
    }

    match /production_orders/{productionOrderId} {
        allow read, write: if isOneOfRoles(['admin', 'production']);
    }

    match /expenses/{expenseId} {
        allow read, write: if isOneOfRoles(['admin', 'accountant']);
    }
    
    match /workers/{workerId} {
        allow read, write: if isOneOfRoles(['admin', 'production']);
    }

    match /work_logs/{workLogId} {
        allow read, write: if isOneOfRoles(['admin', 'production']);
    }
    
    match /notifications/{notificationId} {
      allow read, write: if isAuth();
    }
  }
}
